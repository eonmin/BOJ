import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static int n,m,v;
	static int[][] map;
	static int[] chkmap;
	static int[] ans;
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		n = sc.nextInt()+1;
		m = sc.nextInt();
		v = sc.nextInt();
		
		map = new int[n][n];
		chkmap = new int[n];
		ans = new int[n];
		
		for(int i=0;i<m;i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			map[a][b] = map[b][a] = 1;
		}
		
		dfs(v);
		System.out.println();
		Arrays.fill(chkmap, 0);
		bfs();
		
	}
	
	static void dfs(int num) {
		System.out.print(num+" ");
		chkmap[num] = 1;
		for(int i=1;i<n;i++) {
			if(map[num][i] == 1 && chkmap[i] != 1 ) {
				chkmap[i] = 1;
				dfs(i);
			}
		}
	}
	
	static void bfs() {
		Queue<Integer> q = new LinkedList<Integer>();
		q.add(v);
		while(!q.isEmpty()) {
			int tmp = q.poll();
			System.out.print(tmp + " ");
			chkmap[tmp] = 1;
			for(int i=1;i<n;i++) {
				if(map[tmp][i] == 1 && chkmap[i] != 1 ) {
					q.add(i);
					chkmap[i] = 1;
				}
			}
		}
	}

}
