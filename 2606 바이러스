
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	
	static int n,k,cnt;
	static int[][] map;
	static int[] chkmap;
	static Queue<Integer> q = new LinkedList<Integer>();
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		n = sc.nextInt();
		k = sc.nextInt();
		
		map = new int[n+1][n+1];
		chkmap = new int[n+1];
		Arrays.fill(chkmap, 0);
		
		for(int i=0;i<n+1;i++) {
			for(int j=0;j<n+1;j++) {
				map[i][j] = 0;
			}
		}
		
		for(int i=0;i<k;i++) {
			int num1 = sc.nextInt();
			int num2 = sc.nextInt();
			map[num1][num2] = 1;
			map[num2][num1] = 1;
		}
		
		bfs(1);
		
		System.out.println(cnt);
	}
	
	static void bfs(int num) {
		q.offer(num);
		cnt = 0;
		chkmap[num] =1;
		while(!q.isEmpty()) {
			int x = q.poll();
			for(int i=0;i<n+1;i++) {
				if(map[x][i] ==1 && chkmap[i] ==0) {
					chkmap[i] =1;
					cnt++;
					q.offer(i);
				}
			}
		}
	}

}
