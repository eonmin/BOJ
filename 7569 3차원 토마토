import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static int m,n,h,day;
	static int[][] box;
	static int[][] chkbox;
	
	static class Point {
		int x,y,h,day;
		
		public Point(int x, int y, int day) {
			this.x = x;
			this.y = y;
			this.day = day;
		}
	}
	static Queue<Point> q = new LinkedList<Point>();
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		m = sc.nextInt();
		n = sc.nextInt();
		h = sc.nextInt();
		
		box = new int[n*h][m];
		chkbox = new int[n*h][m];
		
		for(int i=0;i<n*h;i++) {
			for(int j=0;j<m;j++) {
				box[i][j] = sc.nextInt();
				chkbox[i][j] =0;
			}
		}
		//토마토가 들어 있는 위치 큐에 넣기
		for(int i=0;i<n*h;i++) {
			for(int j=0;j<m;j++) {
				if(box[i][j] == 1) {
					q.offer(new Point(i,j,0));
				}else if(box[i][j] == -1) {
					chkbox[i][j]=1;
				}
			}
		}
		
		bfs();
		
		//bfs 끝나고 값 확인
		int tmp=0;
		for(int i=0;i<n*h;i++) {
			for(int j=0;j<m;j++) {
				if(chkbox[i][j] == 0) tmp = -1;
			}
		}
		
		//출력
		if(tmp == -1) {
			System.out.println(-1);
		}else if(tmp == 0) {
			System.out.println(day);
		}	
		
	}
	
	static void bfs() {
		//3차원이기 때문에 위, 아래 추가
		int[][] dir = {{1,0},{0,1},{-1,0},{0,-1},{n,0},{-n,0}};
		while(!q.isEmpty()) {
			Point p = q.poll();
			day = p.day;
			chkbox[p.x][p.y] = 1;
			for(int i=0;i<6;i++) {
				int dx = p.x+dir[i][0];
				int dy = p.y+dir[i][1];
				//f랑 static h 랑 변수 똑같이 해서 헷갈렸었음
				int f = p.x/n;
				if(inside(dx,dy,f,i) && chkbox[dx][dy] == 0 && box[dx][dy] == 0) {
					chkbox[dx][dy] = 1;
					//day를 같이 넘겨야 숫자 동시에 셀 수 있음.
					q.offer(new Point(dx,dy,day+1));
				}
			}
		}
	}
	
	static boolean inside(int x, int y, int f, int i) {
		//상하좌우  + 같은 칸에 위치한 토마토 인지
		if(i<4) {
			return !(x<0||y<0||x>=n*f+n||x<n*f||y>=m);
		}else {
			//위, 아래  : y값은 변화  없으니까 x값이 전체 범위를 벗어나지 않는지 확인 n*h!
			return !(x<0||x>=n*h);
		}
	}
}
